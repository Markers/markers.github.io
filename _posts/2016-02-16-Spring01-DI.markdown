---
layout: post
title:  "Spring 공부 01 DI"
categories: Spring
---

###프레임워크의 정의###
프레임워크를 라이브러리와 비교를 많이 함.

의도가 좀 더 명확한 것을 말함

라이브러리가 일종의 도구라고 생각한다면, 프레임워크는 이미 어느정도 만들어진 집(틀)이라고 볼 수 있다.

###DI(Dependency injection)###

의존성이 있는 클래스 간에 객체 의존 관계를 정의한 것.

의존성이 있는 클래스가 객체를 생성하는 방법은 2가지가 있는 것으로 보임.

방법 1. 직접 객체 생성 (***코드 필요***)

방법 2. 객체 주입 - 외부에서 객체를 생성하여 생성할려는 객체에 주입 (***코드 필요***)

**Q) DI라는 개념은 왜 생겼났는가? 생겨난 배경은(역사..?)?**

A) 자바는 객체지향을 전제로 생겨난 언어이다보니 리팩토링에 관해 연구(?)가 많이 된 것으로 보인다. 

Martin Fowler라는 분이 리팩토링에 대해 엄청난 글을 작성하신거 같은데.... 정확히는 확인해보아야 됨...


링크 : [http://martinfowler.com/articles/injection.html](http://martinfowler.com/articles/injection.html)


###IOC 컨테이너###

부품을 생성하고 조립하는 라이브러리 집합체 라고는 하는데 정확히 무슨 말인지 -_-




참고 자료 : 

<iframe src="//www.slideshare.net/slideshow/embed_code/key/2IwntV2WT8PiXL" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/baejjae93/dependency-injection-36867592" title="[JWPA-1]의존성 주입(Dependency injection)" target="_blank">[JWPA-1]의존성 주입(Dependency injection)</a> </strong> from <strong><a href="//www.slideshare.net/baejjae93" target="_blank">YoungHo Cho</a></strong> </div>